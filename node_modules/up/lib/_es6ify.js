require('es6-module-loader');
var path = require('path');

System.paths['up/*'] = path.normalize(__dirname) + '/*.js'; //need to add up here so the config loader can work
System.require = require;
System.process = process;

System.addConfig = function(config){
    config.bundles.forEach(function(item) {
        if (item == 'up') return
        if (item == config.name) {
            System.paths[item + '/*'] = process.cwd() + '/lib/*.js';
            return;
        }
        //TODO add more bundle config path setup and config merging here
    });
};

var _es6ify = function(mid, method, args, config, callback){

    if (config) System.addConfig(config);

    System.import(mid).then(
        function(module){
            method = method || 'default';
            args = args || [];
            if (typeof module[method] != 'function') return;
            try {
                callback(null, module[method].apply(null, args))
            } catch (err){
                callback(err)
            }
        },
        function(err){
            console.log(err);
            callback(err);
        }
    )
}

process.on('message', function(args) {

    if (!global.postMessage){
        global.postMessage = function(message){
            process.send(message);
        }
    }

    if (args.config) System.addConfig(args.config);

    System.import(args.mid).then(
        function(){
            onmessage({data: args.message});
        },
        function(err){
            console.log(err);
        }
    )
})

module.exports = _es6ify;
