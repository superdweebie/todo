var toThunk = (obj) => {

    if (Array.isArray(obj)){
        return (callback) => {
            var pending = 1;
            var results = [];
            obj.forEach((item, index) => {
                pending++;
                item((result) => {
                    results[index] = result;
                    pending--;
                    if (pending == 0) callback(results)
                })
            });
            pending--;
            if (pending == 0) callback(results)
        }
    }

    return obj;
}

export default (generator) => {
  var gen = generator();

  function nextItem(result) {
    var item = gen.next(result);

    if (item.done) return
    toThunk(item.value)(nextItem);
  }

  nextItem();
};
