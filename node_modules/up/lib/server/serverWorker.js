import callbackAngel from 'up/callbackAngel';
import contentType from 'up/contentType';
import exists from 'up/exists';
import find from 'up/find';
import text from 'up/text';

var http = System.require('http');
var url = System.require('url');

var config;

//var find = (urlPath, bundles) => {
//    return (callback) => {
//        callbackAngel(function* (){
//            var found;
//            var mid;
//            var file;
//            for (var key in bundles){
//                mid = bundles[key] + '/public/' + urlPath;
//                found = yield exists(mid);
//
//                if (found) {
//                    file = yield text(mid);
//                    break;
//                }
//            }
//            callback(file);
//        })
//    }
//}

var server = http.createServer((request, response) => {
    callbackAngel(function* (){
        var parsedUrl = url.parse(request.url);
        if (parsedUrl.pathname == '/') parsedUrl.pathname = '/index.html';

        var content = yield find(config.bundles, parsedUrl, 'resource', ['sys']);

        //var file = yield find(parsedUrl.pathname.slice(1), config.bundles);

        if (!content) {
            content = yield find('404.html', config.bundles);
            response.writeHeader(404, {"Content-Type": contentType('404.html')});
            response.end(file);
            console.log('404 sent for ' + request.url);
            return;
        }

        response.writeHead(200, {'Content-type': contentType(parsedUrl.pathname)});
        response.end(content);
        console.log('200 sent for ' + request.url);
    })
});

global.onmessage = (evt) => {
    var cmd = evt.data.cmd;

    if (cmd == 'config') {
        config = evt.data.message;
        server.listen(config.port, config.host);
        postMessage({cmd: 'ready'});
    }
}
